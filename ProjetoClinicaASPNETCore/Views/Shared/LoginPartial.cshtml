@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Administrador"))
    {
        <ul class="nav navbar-nav">
            <li><a class="nav-link" asp-controller="VerificaRole" asp-action="Index">Verifica Role</a></li>
        </ul>
        <ul class="nav navbar-nav navbar-right">
            <li><a class="nav-link" asp-controller="Account" asp-action="Logout"> (Administrador) Sair </a></li>
        </ul>
    }
    else if (User.IsInRole("Funcionario"))
    {
        <ul class="nav navbar-nav">
            <li><a class="nav-link" asp-controller="VerificaRole" asp-action="Index">Verifica Role</a></li>
        </ul>
        <ul class="nav navbar-nav navbar-right">
            <li><a class="nav-link" asp-controller="Account" asp-action="Logout"> (Funcionario) Sair </a></li>
        </ul>
    }
    else
    {
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a class="nav-link">Olá @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <a class="nav-link" asp-controller="Account" asp-action="Logout"> Sair </a>
            </li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a class="nav-link" asp-controller="Account" asp-action="Register"> Registrar </a></li>
        <li><a class="nav-link" asp-controller="Account" asp-action="Login"> Entrar </a></li>
    </ul>
}